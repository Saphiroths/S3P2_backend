Ï
ZC:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Context\PostContext.cs
	namespace 	
PostService
 
. 
Context 
{ 
public 

class 
PostContext 
: 
	DbContext (
{ 
public 
PostContext 
( 
DbContextOptions +
<+ ,
PostContext, 7
>7 8
options9 @
)@ A
:B C
baseD H
(I J
optionsJ Q
)Q R
{		 	
} 	
public 
virtual 
DbSet 
< 
Post !
>! "
Post# '
{( )
get* -
;- .
set/ 2
;2 3
}4 5
} 
} ò
aC:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Controllers\PostController.cs
	namespace		 	
PostService		
 
.		 
Controllers		 !
{

 
[ 
Route 

(
 
$str 
) 
] 
[ 
ApiController 
] 
public 

class 
PostController 
:  !
ControllerBase" 0
{ 
private 
	PostLogic 
_logic  
;  !
public 
PostController 
( 
	PostLogic '
logic( -
)- .
{ 	
_logic 
= 
logic 
; 
} 	
[ 	
HttpGet	 
] 
[ 	

ActionName	 
( 
$str "
)" #
]# $
public 
IActionResult 
GetAllPosts (
(( )
)) *
{ 	
try 
{ 
ICollection 
< 
PostViewModel )
>) *
posts+ 0
=1 2
_logic3 9
.9 :
GetPosts: B
(B C
)C D
;D E
return 
Ok 
( 
posts 
)  
;  !
} 
catch 
{ 
return   

StatusCode   !
(  ! "
StatusCodes  " -
.  - .(
Status500InternalServerError  . J
)  J K
;  K L
}!! 
}"" 	
[$$ 	
HttpGet$$	 
]$$ 
[%% 	
Route%%	 
(%% 
$str%% 
)%% 
,%% 

ActionName%% "
(%%" #
$str%%# 0
)%%0 1
]%%1 2
public&& 
IActionResult&& 
GetPostById&& (
(&&( )
int&&) ,
id&&- /
)&&/ 0
{'' 	
PostViewModel(( 
post(( 
=((  
_logic((! '
.((' (
GetPostById((( 3
(((3 4
id((4 6
)((6 7
;((7 8
if** 
(** 
post** 
.** 
Id** 
>** 
$num** 
)** 
{++ 
return,, 
Ok,, 
(,, 
post,, 
),, 
;,,  
}-- 
return// 
NotFound// 
(// 
)// 
;// 
}00 	
[22 	
HttpGet22	 
]22 
[33 	
Route33	 
(33 
$str33 
)33 
,33 

ActionName33 #
(33# $
$str33$ 4
)334 5
]335 6
public44 
IActionResult44 
Hallo44 "
(44" #
)44# $
{55 	
return66 
Ok66 
(66 
$str66 
)66 
;66 
}77 	
}88 
}99 Â
VC:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Logic\PostLogic.cs
	namespace 	
PostService
 
. 
Logic 
{		 
public

 

class

 
	PostLogic

 
{ 
private 
readonly 
	IPostRepo "
_repo# (
;( )
private 
readonly 
IMapper  
_mapper! (
;( )
public 
	PostLogic 
( 
	IPostRepo "
repo# '
,' (
IMapper) 0
mapper1 7
)7 8
{ 	
_repo 
= 
repo 
; 
_mapper 
= 
mapper 
; 
} 	
public 
ICollection 
< 
PostViewModel (
>( )
GetPosts* 2
(2 3
)3 4
{ 	
ICollection 
< 
Post 
> 
posts #
=$ %
_repo& +
.+ ,
GetPosts, 4
(4 5
)5 6
.6 7
ToList7 =
(= >
)> ?
;? @
ICollection 
< 
PostViewModel %
>% &
postViewModels' 5
=6 7
_mapper8 ?
.? @
Map@ C
<C D
ICollectionD O
<O P
PostViewModelP ]
>] ^
>^ _
(_ `
posts` e
)e f
.f g
ToListg m
(m n
)n o
.o p

AsReadOnlyp z
(z {
){ |
;| }
return 
postViewModels !
;! "
} 	
public 
PostViewModel 
GetPostById (
(( )
int) ,
id- /
)/ 0
{ 	
PostViewModel 
post 
=  
_mapper! (
.( )
Map) ,
<, -
PostViewModel- :
>: ;
(; <
_repo< A
.A B
GetPostByIdB M
(M N
idN P
)P Q
)Q R
;R S
return 
post 
; 
} 	
}   
}!! Ã
hC:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Migrations\20211001114136_AddPost.cs
	namespace 	
PostService
 
. 

Migrations  
{ 
public 

partial 
class 
AddPost  
:! "
	Migration# ,
{ 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder		 
.		 
CreateTable		 (
(		( )
name

 
:

 
$str

 
,

 
columns 
: 
table 
=> !
new" %
{ 
Id 
= 
table 
. 
Column %
<% &
int& )
>) *
(* +
type+ /
:/ 0
$str1 6
,6 7
nullable8 @
:@ A
falseB G
)G H
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
Title 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
trueR V
)V W
,W X
Description 
=  !
table" '
.' (
Column( .
<. /
string/ 5
>5 6
(6 7
type7 ;
:; <
$str= L
,L M
nullableN V
:V W
trueX \
)\ ]
,] ^
Link 
= 
table  
.  !
Column! '
<' (
string( .
>. /
(/ 0
type0 4
:4 5
$str6 E
,E F
nullableG O
:O P
trueQ U
)U V
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% .
,. /
x0 1
=>2 4
x5 6
.6 7
Id7 9
)9 :
;: ;
} 
) 
; 
} 	
	protected 
override 
void 
Down  $
($ %
MigrationBuilder% 5
migrationBuilder6 F
)F G
{ 	
migrationBuilder 
. 
	DropTable &
(& '
name 
: 
$str 
) 
; 
} 	
} 
} ·
UC:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Models\Message.cs
	namespace 	
PostService
 
. 
Models 
{ 
public 

class 
Message 
{		 
public

 
string

 
message

 
{

 
get

  #
;

# $
set

% (
;

( )
}

* +
} 
} Ü
RC:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Models\Post.cs
	namespace 	
PostService
 
. 
Models 
{ 
public 

class 
Post 
{ 
[ 	
Key	 
] 
[ 	
Required	 
] 
public		 
int		 
Id		 
{		 
get		 
;		 
set		  
;		  !
}		" #
public

 
string

 
Title

 
{

 
get

 !
;

! "
set

# &
;

& '
}

( )
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Link 
{ 
get  
;  !
set" %
;% &
}' (
} 
} 
fC:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Models\ViewModels\PostViewModel.cs
	namespace 	
PostService
 
. 
Models 
. 

ViewModels '
{ 
public 

class 
PostViewModel 
{		 
public

 
int

 
Id

 
{

 
get

 
;

 
set

  
;

  !
}

" #
public 
string 
Title 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
string 
Link 
{ 
get  
;  !
set" %
;% &
}' (
public 
PostViewModel 
( 
string #
title$ )
,) *
string+ 1
description2 =
,= >
string? E
linkF J
)J K
{ 	
Title 
= 
title 
; 
Description 
= 
description %
;% &
Link 
= 
link 
; 
} 	
public 
PostViewModel 
( 
) 
{ 	
} 	
} 
} Ó
[C:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Profiles\PostProfile.cs
	namespace 	
PostService
 
. 
Profiles 
{ 
public 

class 
PostProfile 
: 
Profile &
{ 
public		 
PostProfile		 
(		 
)		 
{

 	
	CreateMap 
< 
Post 
, 
PostViewModel )
>) *
(* +
)+ ,
;, -
} 	
} 
} §

NC:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Program.cs
	namespace

 	
PostService


 
{ 
public 

class 
Program 
{ 
public 
static 
void 
Main 
(  
string  &
[& '
]' (
args) -
)- .
{ 	
CreateHostBuilder 
( 
args "
)" #
.# $
Build$ )
() *
)* +
.+ ,
Run, /
(/ 0
)0 1
;1 2
} 	
public 
static 
IHostBuilder "
CreateHostBuilder# 4
(4 5
string5 ;
[; <
]< =
args> B
)B C
=>D F
Host 
.  
CreateDefaultBuilder %
(% &
args& *
)* +
. $
ConfigureWebHostDefaults )
() *

webBuilder* 4
=>5 7
{ 

webBuilder 
. 

UseStartup )
<) *
Startup* 1
>1 2
(2 3
)3 4
;4 5
} 
) 
; 
} 
} ß
]C:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Repositories\IPostRepo.cs
	namespace 	
PostService
 
. 
Repositories "
{ 
public 

	interface 
	IPostRepo 
{ 
public 
IReadOnlyList 
< 
Post !
>! "
GetPosts# +
(+ ,
), -
;- .
public		 
Post		 
GetPostById		 
(		  
int		  #
id		$ &
)		& '
;		' (
}

 
} Ú
\C:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Repositories\PostRepo.cs
	namespace 	
PostService
 
. 
Repositories "
{ 
public 

class 
PostRepo 
: 
	IPostRepo %
{		 
private

 
readonly

 
PostContext

 $
_context

% -
;

- .
public 
PostRepo 
( 
PostContext #
context$ +
)+ ,
{ 	
_context 
= 
context 
; 
} 	
public 
Post 
GetPostById 
(  
int  #
id$ &
)& '
{ 	
return 
_context 
. 
Post  
.  !
Where! &
(& '
p' (
=>) +
p, -
.- .
Id. 0
==1 3
id4 6
)6 7
.7 8
FirstOrDefault8 F
(F G
)G H
;H I
} 	
public 
IReadOnlyList 
< 
Post !
>! "
GetPosts# +
(+ ,
), -
{ 	
return 
_context 
. 
Post  
.  !
AsEnumerable! -
(- .
). /
./ 0
ToList0 6
(6 7
)7 8
.8 9

AsReadOnly9 C
(C D
)D E
;E F
} 	
} 
} ¯
NC:\Users\Max\Documents\GitHub\S3P2_backend\S3P2_project\PostService\Startup.cs
	namespace 	
PostService
 
{ 
public 

class 
Startup 
{ 
public 
Startup 
( 
IConfiguration %
configuration& 3
)3 4
{ 	
Configuration 
= 
configuration )
;) *
} 	
public 
IConfiguration 
Configuration +
{, -
get. 1
;1 2
}3 4
public 
void 
ConfigureServices %
(% &
IServiceCollection& 8
services9 A
)A B
{ 	
services 
. 
AddControllers #
(# $
)$ %
;% &
services 
. 
AddAutoMapper "
(" #
typeof# )
() *
Startup* 1
)1 2
)2 3
;3 4
services 
. #
AddControllersWithViews ,
(, -
)- .
;. /
services 
. 
AddCors 
( 
options $
=>% '
{ 
options   
.   
	AddPolicy   !
(  ! "
$str  " 3
,  3 4
builder  5 <
=>  = ?
{!! 
builder"" 
."" 
AllowAnyOrigin"" *
(""* +
)""+ ,
."", -
AllowAnyMethod""- ;
(""; <
)""< =
.""= >
AllowAnyHeader""> L
(""L M
)""M N
;""N O
}## 
)## 
;## 
}$$ 
)$$ 
;$$ 
services&& 
.&& 
AddDbContext&& !
<&&! "
PostContext&&" -
>&&- .
(&&. /
options&&/ 6
=>&&7 9
{'' 
options(( 
.(( 
UseSqlServer(( $
((($ %
Configuration((% 2
.((2 3
GetConnectionString((3 F
(((F G
$str((G Y
)((Y Z
)((Z [
;(([ \
})) 
))) 
;)) 
services++ 
.++ 
	AddScoped++ 
<++ 
	IPostRepo++ (
,++( )
PostRepo++* 2
>++2 3
(++3 4
)++4 5
;++5 6
services,, 
.,, 
	AddScoped,, 
<,, 
	PostLogic,, (
>,,( )
(,,) *
),,* +
;,,+ ,
}-- 	
public00 
void00 
	Configure00 
(00 
IApplicationBuilder00 1
app002 5
,005 6
IWebHostEnvironment007 J
env00K N
)00N O
{11 	
if22 
(22 
env22 
.22 
IsDevelopment22 !
(22! "
)22" #
)22# $
{33 
app44 
.44 %
UseDeveloperExceptionPage44 -
(44- .
)44. /
;44/ 0
}55 
app77 
.77 
UseHttpsRedirection77 #
(77# $
)77$ %
;77% &
app99 
.99 

UseRouting99 
(99 
)99 
;99 
app;; 
.;; 
UseCors;; 
(;; 
$str;; )
);;) *
;;;* +
app== 
.== 
UseAuthorization==  
(==  !
)==! "
;==" #
app?? 
.?? 
UseEndpoints?? 
(?? 
	endpoints?? &
=>??' )
{@@ 
	endpointsAA 
.AA 
MapControllersAA (
(AA( )
)AA) *
;AA* +
}BB 
)BB 
;BB 
}CC 	
}DD 
}EE 